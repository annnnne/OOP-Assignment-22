package baekedbeans;

import ie.tudublin.Visual;
//2nd attempt of drawing the flower(s) - multiple flowers(verse 1 of hula hoop)

public class Bee extends Visual
{

    Start bee;

    //constructor
    public Bee(Start bee) 
    {
        this.bee = bee;
    }

    //will get random colour for the flowers drawn
    int getRandomColor()
    {
        //calulating average
        float avg = 0;
        for (int i = 0; i < ab.size(); i++)
        {
            avg += abs(ab.get(i));
        }
        avg = avg / ab.size();
        float smoothedavg = 0;
        smoothedavg = lerp(smoothedavg, avg, 0.1f);
        //three random values cause it states for RGB respectively
        //note one of them goes from 120 to 255 as we don't want all random color generated by thr red colour
        
        float c = map(avg, -1, 1, 0, 255);
        return color(c, 255, 255);
    }//end getRandomColor()


    //This function will allow to draw flower multiple times 
    public void drwFlr(float x, float y, float floSize)//passes three parameters the x and y axes and the flower size so flower can be drawn repeatedly and for efficiency
    {
        bee.colorMode(HSB);

        //calulating average
        float avg = 0;
        for (int i = 0; i < ab.size(); i++)
        {
            avg += abs(ab.get(i));
        }
        avg = avg / ab.size();
        float smoothedavg = 0;
        smoothedavg = lerp(smoothedavg, avg, 0.1f);
        //three random values cause it states for RGB respectively
        //note one of them goes from 120 to 255 as we don't want all random color generated by thr red colour
        
        float c = map(avg, -1, 1, 0, 255);
        
        //thickness of line will be size of flower
        bee.strokeWeight(floSize);

        //will get random colour for petals each time it is drawn
        bee.stroke(c, 255, 255);

       
        //for flower to appear at different points of the canvas we use the x and y axes
        bee.translate(x, y);
        
        bee.pushMatrix();
        
        //for loop so the petals can be drawn repeatedly
        for(int i=0; i<7;i++)
        {
            //rotate flower petals by 90 degrees
            //two_pi is the circle being divided by the amount of times the petals around it will be drawn
            bee.rotate(TWO_PI/7);
            //drawing the line using floSize
            bee.line(0, 0, 3 * floSize, 0);
            
        }//end for

        bee.popMatrix();

    }//end drwFlr()

    //This draw function will allow the flowers to be drawn when any key is pressed on keyboard
    void render()
    {
        //calulating average
        float avg = 0;
        for (int i = 0; i < ab.size(); i++)
        {
            avg += abs(ab.get(i));
        }
        avg = avg / ab.size();
        float smoothedavg = 0;
        smoothedavg = lerp(smoothedavg, avg, 0.1f);
        
        bee.pushMatrix();
        bee.translate(bee.width/2, bee.height/5);
        bee.fill(255);
        bee.textSize(50+(50*smoothedavg));
        bee.text("Press and hold any key for a flower explosion!", 0, 0);
        bee.popMatrix();

        
        //calls drawFlower() function
        //The flowers will also appear in random colour and random places on the canvas
        if(bee.keyPressed == true)
        {
            drwFlr(random(bee.width), random(bee.height), random(5,25));  
        }

        //pushMatrix to stop the translate in the function messing up the second flower
        bee.pushMatrix();
        drwFlr(bee.width/3, bee.height/2, 50);
        bee.popMatrix();

        drwFlr(2*bee.width/3, bee.height/2, 50);

    
    }//end draw()
}



